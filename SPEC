
        Slimdown, a specification

The title is optional, but needs at least 4+4 (8) spaces. This enables longer
titles, subtitles, and centered titles.

This is a sentence preceding a command, which is

    echo hi

This is a sentence preceding a list of things (colon optional)

  one

  two

  three

Fundamentally, a list of items has spaces between for _decorated lists,_ like

  item 1
  And some more details, because it's nice to have.

  item 2
  Some more notes on this second entry.

  item 3
  Changes regarding something
  And another line besides (80-char width, ideally).

Sections are denoted by having a colon.

This would (automatically) be considered a section heading:

(Because it has a colon.)

It's also considered a section because there's no (\n  ) after it.

So, parsing slimdown based on the above

  See if it's a command first (optional sentence\n\n + 4 spaces)

  Then see if it's a list (2-space entries separated by newlines).

  Section text has a colon

  Section text does _not_ have a "dot word boundary" of "... a. Aaaa"
                                                             ^^^^
  Section text does not have a dot (i.e. sentences).
  Sections are not sentences.

I guess sections have to go into a collection so that we can decorate duplicate
strings as references...

Section Test 1:

  Oh and we have a list

  It should get parsed as a section, since "\n\n  " (two spaces).

Section Test 2:

    A command without a preceding sentence!

Same deal: "\n\n    " (four spaces).

It only generates one cube. Let's try another example:

    The above should not be a section, because there is a "dot word boundary" of
    of "... cube. Let's ..."

Assumption: but this will be a sentence, so it's not a section.

The above would be another section test. It should _not_ be a section.

(I guess we don't need a linter yet, since there's no ambiguity now.)

Section Test 5: A section after a section

This becomes another section:

This too:

For formatting, there is not sub-sections by default spec. One could modify the
intermediate program to be sub-section aware, but it's implementation (content?)
dependent. Hardcoded subsection names or a custom lookup thingy.

Section Test 6: The next line should be a list, not a section

  1: This is a list item, not a section. Easy enough (2 spaces).

(Maybe we need comment lines to mark up our slimdown docs?)

We need to handle `quoting' (along with _emphasis_ and **bold** or __emphatic__
remarks).

This is a paragraph. Just a running group of sentences.
(Sentences shouldn't have to end in periods)
Still part of a paragraph.

Two list items with a command between are two list items. For example,

  Here I'm sharing a list item of something, _as well as_ a command:

    $ echo hello

  Is this list item a new bullet or a continuation of the previous list item?
  Well, it's irrelevant because it's a new list item.

  That means people have to track their own numerals for numbered lists. I guess
  don't make long numbered lists (to avoid renumbering). (Or defer to
  post-processing after parsing.)


We don't need to distinguish between commands and lists when the next line of
the list is indented underneath:

  1. Here is a list item
     and here is some text that continues, with 5 spaces preceding it

  15. Here is a list item that has two numerals.
      six spaces preceding this one.

  100. Here is a list item that has three numerals.
       seven spaces preceding this one.

    Notice a command is four spaces still.

So I guess we're okay here.
--------------------------------------------------------------------------------
